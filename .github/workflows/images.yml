name: Publish Docker

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_SHA:0:10})
      - name: Publish PHP Image to Registry
        id: dockerphp
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tonysm/docker4laravelapp-php
          dockerfile: .docker/php/prod.Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.RELEASE_VERSION }}"
          cache: ${{ github.event_name != 'schedule' }}
      - name: Publish Nginx Image to Registry
        id: dockernginx
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tonysm/docker4laravelapp-nginx
          dockerfile: .docker/nginx/prod.Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.RELEASE_VERSION }}"
          cache: ${{ github.event_name != 'schedule' }}
      - name: Patch Infrastructure Manifests
        env:
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          GITHUB_NAME: 'Automated from Github Actions'
          GITHUB_PASSWORD: ${{ secrets.GIT_TOKEN }}
          GIT_REPO: "tonysm/dockerforlaravel-k8s-files"
        run: |
          set -e

          # Installs Kustomize.
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          chmod +x ./kustomize && sudo mv ./kustomize /usr/local/bin/kustomize

          # Install HUB CLI tool.
          curl -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz
          tar -zxf hub-linux-amd64-2.11.2.tgz
          cd hub-linux-amd64-2.11.2
          sudo ./install
          hub --version
          cd .. && rm -rf hub-linux-amd64-2.11.2/ hub-linux-amd64-2.11.2.tgz

          # Configuring Git
          git config --global credential.helper store
          echo "https://${GITHUB_TOKEN}:x-oauth-basic@github.com" > "${HOME}/.git-credentials"

          # Clone the infrastructure repository.
          hub config --global hub.protocol https
          hub clone ${GIT_REPO} infrastructure-repo
          cd infrastructure-repo/
          # Create a branch
          git checkout -b release-${RELEASE_VERSION}

          # Patch the new image.
          kustomize edit set image laravel-app-nginx=tonysm/docker4laravelapp-nginx:${RELEASE_VERSION}
          kustomize edit set image laravel-app-php=tonysm/docker4laravelapp-php:${RELEASE_VERSION}

          if [[ `git status --porcelain` ]]; then
            hub config --global user.name "${GITHUB_NAME}"
            hub config --global user.email "${GIT_EMAIL}"

            # Add the changed kustomization file to our git stage to be commited.
            hub add kustomization.yml

            hub commit -F- <<EOF
          Auto-release of the image version
          This commit updates the application container image version to:
              ${RELEASE_VERSION}.
          EOF

            # Deployments to production will only happen after the infrastructure PR is merged.
            hub pull-request -p -m "Auto-release of image version: ${RELEASE_VERSION}"
          else
            echo "Nothing changed (everything up-to-date)."
          fi

          # Clean up.
          cd ..
          rm -rf infrastructure-repo/
          rm -f ${HOME}/.git-credentials
